/******************************************************************************

                      
     ****CONTACT MANAGEMEN SYSTEM****
                           

*******************************************************************************
/

#include <stdio.h>

#include<conio.h>

#include<string.h>

#include<stdlib>
struct contact

{

    long phone;

    char name[20],address[20],email[30];

}list;

char query[20],name[20];

FILE *fp,*ft;

int i,n,ch,l,found;


int main()

{

clrscr();

printf("\n\t******************************WELCOME TO CONTACT MANAGER*************************************");

printf("\n\n\n\t\t\tMAIN MENU\n\t\t===========================================================\n\t\t[1]Add a new contact\n\t\t[2] list all contacts\n\t\t[3] search for contact\n\t\t[4] edit a contact\n\t\t[5] delete a contact\n\t\t[0]exit\n\t\t===============================================================================\n\t\t");

printf("enter the ch:");

scanf("%d",&ch);

switch(ch)

{

    case 1:
 
   printf("\n\n\t\t Are you sure you want to exit?");

    break;
 
   /********************************************Add new contacts*************************************************/
    
case 2:
 
   clrscr();
    
fp=fopen("contact.txt","a");

    for(;;)
 
   {

        fflush(stdin);
   
     printf("To exit enter blank space in the name input\nname(use identical):");

        scanf("%s",&list.name);

        if(strcmp(list.name," ")==0||strcmp(list.name," ")==0)
  
      break;

        fflush(stdin);
 
       printf("Phone:");
  
      scanf("%ld",&list.phone);
     
   fflush(stdin);
   
     printf("address:");
  
      scanf("%[^\n]",&list.address);
     
   fflush(stdin);
   
     printf("email address:");

        gets(list.email);

        printf("\n");
     
   fwrite(&list,sizeof(list),1,fp);

    }

    fclose(fp);
  
  break;
    

    case 3:
 
   clrscr();

    printf("\n\t\t===============================================================\n\t\t\tlist of contacts\n\t\t==============================================================\n\nName\t\tPhone number\tAddress\t\temail address\n==================================================================================\n\n");

    for(i=97;i<=122;i++)

    {
        
fp=fopen("contact.txt","r");
     
   fflush(stdin);

        found=0;
   
     while(fread(&list,size of(list),1,fp)==1)
    
    {
       
     if(list.name[0]==i||list.name[0]==i-32)
      
      {
        
        printf("\n Name\t:%s\nphone\t:%ld\naddress\t:%s\nemail\t:%s\n",list.name,list.phone,list.address,list.email);
   
             found++;
       
     }
    
    }
        
if(found!=0)
     
   {
           
 printf("=======================================================================================[%c]-(%d)\n\n",i-32,found);

            getch();
    
    }
      
  fclose(fp);

    }
    
break;
    

    
case 4:
 
   clrscr();

    do
{

        found=0;
 
       printf("\n\n\t..::contact search\n\t===========================================================\n\t..::name of contact to search:");
       
 fflush(stdin);

        scanf("%s",query);
   
     l=strlen(query);
       
 fp=fopen("contact.txt","r");
    
    clrscr();
  
printf("\n\n..::search result for'%s'\n===================================================================\n",query);
        
while(fread(&list,sizeof(list),1,fp)==1)
      
  {
      
      for(i=0;i<=1;i++)
   
         name[i]=list.name[i];
       
     name[l]='\0';
  
          if(strcmp(name,query)==0)
     
       {
        
        printf("\n..::Name\t:%s\n..::Phone\t:%ld\n..::address\t:%s\n..::email\t:%s\n",list.name,list.phone,list.address,list.email);
   
             found++;
      
      if(found54==0)
      
      printf("..::Press any key to continue...");
        
    getch();
     
       
            }
      
  }
      
  
    }
 
   if(found==0)
 
   printf("\n..::no match found!");
    
else
    
printf("\n..::%d match(s) found!",found);
 
   fclose(fp);

    printf("\n..::try again?\n\n\t[1]yes\t\t[0]no\n\t");
   
 scanf("%d",&ch);

}

while(ch==1);

break;


case 5:

clrscr();

fp=fopen("contact.txt","r");

ft=fopen("temp","w");

fflush(stdin)
;
printf("..::edit contact\n========================================================================================================================\n\n\t..::Enter the name of contact to edit:");

scanf("%s",name);

while(fread(&list,sizeof(list),1,fp)==1)

{
 
   if(strcmp(name,list.name)!=0)
  
  fwrite(&list,sizeof(list),1,ft);

}

fflush(stdin);

printf("\n\n..::editing'%s'\n\n",name);

printf("..::name(use identical):");

scanf("%s",list.name);

fflush(stdin);

printf("..::phone:");

scanf("%ld",&list.phone);

fflush(stdin);

printf("..::email address:");

gets(list.email);

printf("\n");

fwrite(&list,sizeof(list),1,ft);

fclose(fp);

fclose(ft);

remove("contact.txt");

rename("temp.txt","contact.txt");

break;



case 6:

clrscr();

fflush(stdin);

printf("\n\n\t..::Delete a contact\n\t========================================================================================================\n\t..::Enter the name of contact to delete:");

scanf("%s",name);

fp=fopen("contact.txt","r");

ft=fopen("temp.txt","w");

while(fread(&list,sizeof(list),1,fp)!=0)

{

    if(strcmp(name,list.name)!=0)

    fwrite(&list,sizeof(list),1,ft);
    
fclose(fp);
 
   fclose(ft);
 
   remove("contact.txt");

    rename("temp.txt","contact.txt");
 
   break;
 
   default:
  
  printf("Invalid choice");
    
break;
 
   
}

printf("\n\n\n..::Enter the choice:\n\n\t[1]Main menu\t\t[0]Exit\n");

scanf("%d",&ch);

switch(ch)

{

    case 1:
  
  goto main;
  
  case 0:
 
   break;
   
 default:
    
printf("Invalid choice");
    
break;

}

return 0;

}